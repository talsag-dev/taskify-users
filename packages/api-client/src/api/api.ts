/**
 * Generated by orval v7.7.0 🍺
 * Do not edit manually.
 * Tasky API
 * Auth and Users API
 * OpenAPI spec version: 1.0
 */
import axios from 'axios';
import type {
  AxiosRequestConfig,
  AxiosResponse
} from 'axios';

import type {
  CreateUserDto,
  LoginDto,
  RefreshTokenDto,
  UpdateUserDto
} from './schemas';

export const getTaskyAPI = () => {
const authControllerLogin = <TData = AxiosResponse<void>>(
    loginDto: LoginDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/auth/login`,
      loginDto,options
    );
  }

const authControllerRefresh = <TData = AxiosResponse<void>>(
    refreshTokenDto: RefreshTokenDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/auth/refresh`,
      refreshTokenDto,options
    );
  }

const authControllerLogout = <TData = AxiosResponse<void>>(
    refreshTokenDto: RefreshTokenDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/auth/logout`,
      refreshTokenDto,options
    );
  }

const usersControllerCreate = <TData = AxiosResponse<void>>(
    createUserDto: CreateUserDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.post(
      `/users`,
      createUserDto,options
    );
  }

const usersControllerFindOne = <TData = AxiosResponse<void>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.get(
      `/users/${id}`,options
    );
  }

const usersControllerUpdate = <TData = AxiosResponse<void>>(
    id: string,
    updateUserDto: UpdateUserDto, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.put(
      `/users/${id}`,
      updateUserDto,options
    );
  }

const usersControllerDelete = <TData = AxiosResponse<void>>(
    id: string, options?: AxiosRequestConfig
 ): Promise<TData> => {
    return axios.delete(
      `/users/${id}`,options
    );
  }

return {authControllerLogin,authControllerRefresh,authControllerLogout,usersControllerCreate,usersControllerFindOne,usersControllerUpdate,usersControllerDelete}};
export type AuthControllerLoginResult = AxiosResponse<void>
export type AuthControllerRefreshResult = AxiosResponse<void>
export type AuthControllerLogoutResult = AxiosResponse<void>
export type UsersControllerCreateResult = AxiosResponse<void>
export type UsersControllerFindOneResult = AxiosResponse<void>
export type UsersControllerUpdateResult = AxiosResponse<void>
export type UsersControllerDeleteResult = AxiosResponse<void>
